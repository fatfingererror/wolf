rule_engine:
  build: ./rule.engine
  command: ./srv/rule_engine/bin/install.sh

data_router:
  build: ./data.router

cassandra:
  build: ./data.aggregator.rt
  container_name: cassandra
  dockerfile: Dockerfile

data_provider:
  build: .
  dockerfile: data.provider/Dockerfile
  volumes:
    - ./data.provider:/srv/data.provider
    - /Users/lambdasloth/git/working/projects/wolf/histdata.com/data/csv:/srv/data
  # links:
    # - cassandra:database
    # - data_router:kafka
  command:
    # python3 src/2.provider.py audusd 2016 05
    sh bin/run.sh
    # ls /srv/data.provider

hadoop:
  build: .
  dockerfile: data.aggregator.batch/hadoop-cluster-docker/Dockerfile
  volumes:
    - ./data.aggregator.batch:/srv/data.aggregator.batch
  links:
    - data_router:kafka
    - cassandra:database
  command:
    python3 src/2.aggregate.py

# http://192.168.99.101:8080/
# /etc/hosts dockerion:8080
web:
    image: nginx:latest
    ports:
        - "8080:80"
    volumes:
        - ./web.interface:/srv/web/
        - ./web.interface/site.conf:/etc/nginx/conf.d/default.conf
    links:
        - php
php:
    image: php:7-fpm
    volumes:
        - ./web.interface/:/srv/web/

api_rt:
  build: .
  container_name: api_rt
  dockerfile: restful.cache.service.rt/Dockerfile
  ports:
    - "5000:5000"
  volumes:
    - ./restful.cache.service.rt:/srv/restful.cache.service.rt
  links:
    - cassandra:database
  command:
    python3 src/server.py

testing:
  image: ubuntu
  volumes:
    - /Users/lambdasloth/git/working/projects/wolf/histdata.com/data/csv:/srv/data
